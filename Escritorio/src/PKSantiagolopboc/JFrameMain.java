/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PKSantiagolopboc;

import PKSantiagolopboc.Controllers.BackgroundMenuBar;
import PKSantiagolopboc.ENUMtype;
import PKSantiagolopboc.Libro;
import com.mysql.cj.xdevapi.Statement;
import com.sun.jdi.connect.spi.Connection;
import java.awt.Color;
import java.awt.MenuBar;
import java.io.IOException;
import static java.lang.Integer.parseInt;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JSpinner;
import jdk.jfr.Enabled;

/**
 *
 * @author santiagolopboc
 */
public class JFrameMain extends javax.swing.JFrame {

    static ArrayList<Libro> ArrayLibros = new ArrayList<Libro>();
    
    int nMenu;
    int contadorLibros = 0;
    static int contadorSiguiente = 0;
    DefaultComboBoxModel dmp;
    String[] tipos;
    ClassDB database = new ClassDB();
   
    

    /**
     * Creates new form JFrameMain
     */
    public JFrameMain() throws SQLException {
        initComponents();
        initConfig();

    }

    public void siguiente() {
        try {
            contadorSiguiente++;
            if (contadorSiguiente < ArrayLibros.size()) {
                int Codigo = ArrayLibros.get(contadorSiguiente).getCodigoISBN();
                jTextFieldCodigo.setText(Codigo + "");
                jTextFieldNombre.setText(ArrayLibros.get(contadorSiguiente).getNombre());
                jTextAuthor.setText(ArrayLibros.get(contadorSiguiente).getAutor());
                String Tipolibro = ArrayLibros.get(contadorSiguiente).getGenero() + "";
                jComboBoxTipos.setSelectedItem(Tipolibro);
                String spinner = ArrayLibros.get(contadorSiguiente).getAñoPublicacion();
                int valorSpinner = Integer.parseInt(spinner);
                jSpinnerAños.setValue(valorSpinner);
            } else {
                contadorSiguiente = 0;
                int Codigo = ArrayLibros.get(contadorSiguiente).getCodigoISBN();
                jTextFieldCodigo.setText(Codigo + "");
                jTextFieldNombre.setText(ArrayLibros.get(contadorSiguiente).getNombre());
                jTextAuthor.setText(ArrayLibros.get(contadorSiguiente).getAutor());
                String Tipolibro = ArrayLibros.get(contadorSiguiente).getGenero() + "";
                jComboBoxTipos.setSelectedItem(Tipolibro);
                String spinner = ArrayLibros.get(contadorSiguiente).getAñoPublicacion();
                int valorSpinner = Integer.parseInt(spinner);
                jSpinnerAños.setValue(valorSpinner);
            }
        } catch (Exception e) {

        }

    }

    public void anterior() {
        try {
            contadorSiguiente--;
            if (contadorSiguiente >= 0) {
                int Codigo = ArrayLibros.get(contadorSiguiente).getCodigoISBN();
                jTextFieldCodigo.setText(Codigo + "");
                jTextFieldNombre.setText(ArrayLibros.get(contadorSiguiente).getNombre());
                jTextAuthor.setText(ArrayLibros.get(contadorSiguiente).getAutor());
                String Tipolibro = ArrayLibros.get(contadorSiguiente).getGenero() + "";
                jComboBoxTipos.setSelectedItem(Tipolibro);
                String spinner = ArrayLibros.get(contadorSiguiente).getAñoPublicacion();
                int valorSpinner = Integer.parseInt(spinner);
                jSpinnerAños.setValue(valorSpinner);
            } else {
                contadorSiguiente = ArrayLibros.size() - 1;
                int Codigo = ArrayLibros.get(contadorSiguiente).getCodigoISBN();
                jTextFieldCodigo.setText(Codigo + "");
                jTextFieldNombre.setText(ArrayLibros.get(contadorSiguiente).getNombre());
                jTextAuthor.setText(ArrayLibros.get(contadorSiguiente).getAutor());
                String Tipolibro = ArrayLibros.get(contadorSiguiente).getGenero() + "";
                jComboBoxTipos.setSelectedItem(Tipolibro);
                String spinner = ArrayLibros.get(contadorSiguiente).getAñoPublicacion();
                int valorSpinner = Integer.parseInt(spinner);
                jSpinnerAños.setValue(valorSpinner);
            }

        } catch (Exception e) {

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldNombre = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSpinnerAños = new javax.swing.JSpinner();
        jComboBoxTipos = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jTextAuthor = new javax.swing.JTextField();
        jButtonInsertar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButtonAnterior = new javax.swing.JButton();
        jButtonSiguiente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreVistaLibros = new javax.swing.JTextArea();
        jLabelContadorLibros = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 250));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel1.setText("DNI");

        jLabel2.setText("Nombre");

        jTextFieldCodigo.setEditable(false);
        jTextFieldCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodigoActionPerformed(evt);
            }
        });
        jTextFieldCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCodigoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCodigoKeyTyped(evt);
            }
        });

        jTextFieldNombre.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
                    .addComponent(jTextFieldNombre))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 11, 633, 123);

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel3.setText("Ciclo");

        jLabel4.setText("Año de nacimiento");

        jSpinnerAños.setEnabled(false);
        jSpinnerAños.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jSpinnerAñosKeyTyped(evt);
            }
        });

        jComboBoxTipos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxTipos.setEnabled(false);

        jLabel5.setText("Apellido");

        jTextAuthor.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextAuthor))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxTipos, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(190, 190, 190)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinnerAños, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jSpinnerAños, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTipos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(10, 150, 633, 114);

        jButtonInsertar.setText("Insertar");
        jButtonInsertar.setEnabled(false);
        jButtonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonInsertar);
        jButtonInsertar.setBounds(10, 274, 633, 56);

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jButtonAnterior.setText("Anterior");
        jButtonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnteriorActionPerformed(evt);
            }
        });

        jButtonSiguiente.setText("Siguiente");
        jButtonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSiguienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                .addComponent(jButtonSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonAnterior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonSiguiente, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3);
        jPanel3.setBounds(10, 348, 633, 75);

        jTextAreVistaLibros.setEditable(false);
        jTextAreVistaLibros.setColumns(20);
        jTextAreVistaLibros.setRows(5);
        jScrollPane1.setViewportView(jTextAreVistaLibros);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(660, 70, 350, 350);

        jLabelContadorLibros.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelContadorLibros.setText("00");
        getContentPane().add(jLabelContadorLibros);
        jLabelContadorLibros.setBounds(870, 20, 140, 40);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Contador Alumnos");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(670, 20, 180, 40);

        jMenuBar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuBar1MouseClicked(evt);
            }
        });

        jMenu1.setText("Añadir");
        jMenu1.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                jMenu1MenuSelected(evt);
            }
        });
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jMenu1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jMenu1MouseExited(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu3.setText("Actualizar");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Visualizar");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        jMenu2.setText("Eliminar");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodigoActionPerformed
    }//GEN-LAST:event_jTextFieldCodigoActionPerformed

    private void jTextFieldCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodigoKeyPressed
    }//GEN-LAST:event_jTextFieldCodigoKeyPressed

    private void jTextFieldCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodigoKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldCodigoKeyTyped

    private void jButtonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertarActionPerformed
        try {

            if (nMenu == 1) {
                Libro libro = new Libro();
                String codigo = jTextFieldCodigo.getText();
                int codigoInt = parseInt(codigo);
                libro.setCodigoISBN(codigoInt);
                libro.setNombre(jTextFieldNombre.getText());
                libro.setAutor(jTextAuthor.getText());
                String TipoLibro = (String) jComboBoxTipos.getSelectedItem();
                libro.setGenero(ENUMtype.valueOf(TipoLibro));
                String spinner = "catch Value";
                Integer myint = (Integer) jSpinnerAños.getValue();
                spinner = myint.toString();
                libro.setAñoPublicacion(spinner);
                ArrayLibros.add(libro);
                String Info = libro.getInfo();
                System.out.println(Info);
                contadorLibros++;
                jLabelContadorLibros.setText(contadorLibros + "");

                database.insertarLibro(libro);

            } else if (nMenu == 2) {

                String codigo = jTextFieldCodigo.getText();
                int codigoInt = parseInt(codigo);
                for (int i = 0; i < ArrayLibros.size(); i++) {
                    if (ArrayLibros.get(i).getCodigoISBN() == codigoInt) {
                        ArrayLibros.remove(i);
                        contadorLibros--;
                    }
                }
                jLabelContadorLibros.setText(contadorLibros + "");
                eliminarLibro();    
            } else if (nMenu == 3) {

                String codigo = jTextFieldCodigo.getText();
                int codigoInt = parseInt(codigo);
                for (int i = 0; i < ArrayLibros.size(); i++) {
                    if (ArrayLibros.get(i).getCodigoISBN() == codigoInt) {
                        ArrayLibros.get(i).setNombre(jTextFieldNombre.getText());
                        ArrayLibros.get(i).setAutor(jTextAuthor.getText());
                        String TipoLibro = (String) jComboBoxTipos.getSelectedItem();
                        ArrayLibros.get(i).setGenero(ENUMtype.valueOf(TipoLibro));
                        String spinner = "catch Value";
                        Integer myint = (Integer) jSpinnerAños.getValue();
                        spinner = myint.toString();
                        ArrayLibros.get(i).setAñoPublicacion(spinner);
                        
                    }
                }
                modificarLibro();

            } else if (nMenu == 4) {
                String InfoTotal = "";
                for (int i = 0; i < ArrayLibros.size(); i++) {
                    InfoTotal += ArrayLibros.get(i).getInfo();
                }
                jTextAreVistaLibros.setText(InfoTotal);
                siguiente();
            }
        } catch (Exception e) {
            jTextAreVistaLibros.setText("Los valores no son validos");
        }

    }//GEN-LAST:event_jButtonInsertarActionPerformed

    private void jMenuBar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuBar1MouseClicked


    }//GEN-LAST:event_jMenuBar1MouseClicked

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        nMenu = 1;
        jButtonInsertar.setText("Insertar");
        jButtonInsertar.setEnabled(true);
        jTextFieldCodigo.setEditable(true);
        jSpinnerAños.setEnabled(true);
        jTextFieldNombre.setEditable(true);
        jTextAuthor.setEditable(true);
        jComboBoxTipos.setEnabled(true);
        jMenu1.setBackground(Color.gray);
        jMenu2.setBackground(Color.cyan);
        jMenu3.setBackground(Color.cyan);
        jMenu4.setBackground(Color.cyan);
        jMenu1.setOpaque(true);
        jMenu2.setOpaque(true);
        jMenu3.setOpaque(true);
        jMenu4.setOpaque(true);
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        nMenu = 2;
        jButtonInsertar.setText("Eliminar");
        jButtonInsertar.setEnabled(true);
        jTextFieldCodigo.setEditable(true);
        jSpinnerAños.setEnabled(false);
        jTextFieldNombre.setEditable(false);
        jTextAuthor.setEditable(false);
        jComboBoxTipos.setEnabled(false);
        jMenu1.setBackground(Color.cyan);
        jMenu2.setBackground(Color.gray);
        jMenu3.setBackground(Color.cyan);
        jMenu4.setBackground(Color.cyan);
        jMenu1.setOpaque(true);
        jMenu2.setOpaque(true);
        jMenu3.setOpaque(true);
        jMenu4.setOpaque(true);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        nMenu = 4;
        jButtonInsertar.setText("Visualizar Lista libros");
        jButtonInsertar.setEnabled(true);
        jTextFieldCodigo.setEditable(false);
        jSpinnerAños.setEnabled(false);
        jTextFieldNombre.setEditable(false);
        jTextAuthor.setEditable(false);
        jComboBoxTipos.setEnabled(false);
        jMenu1.setBackground(Color.cyan);
        jMenu2.setBackground(Color.cyan);
        jMenu3.setBackground(Color.cyan);
        jMenu4.setBackground(Color.gray);
        jMenu1.setOpaque(true);
        jMenu2.setOpaque(true);
        jMenu3.setOpaque(true);
        jMenu4.setOpaque(true);
    }//GEN-LAST:event_jMenu4MouseClicked

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        nMenu = 3;
        jButtonInsertar.setText("Actualizar");
        jButtonInsertar.setEnabled(true);
        jTextFieldCodigo.setEditable(true);
        jSpinnerAños.setEnabled(true);
        jTextFieldNombre.setEditable(true);
        jTextAuthor.setEditable(true);
        jComboBoxTipos.setEnabled(true);
        jMenu1.setBackground(Color.cyan);
        jMenu2.setBackground(Color.cyan);
        jMenu3.setBackground(Color.gray);
        jMenu4.setBackground(Color.cyan);
        jMenu1.setOpaque(true);
        jMenu2.setOpaque(true);
        jMenu3.setOpaque(true);
        jMenu4.setOpaque(true);
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jButtonSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSiguienteActionPerformed
        siguiente();
    }//GEN-LAST:event_jButtonSiguienteActionPerformed

    private void jButtonAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnteriorActionPerformed
        anterior();
    }//GEN-LAST:event_jButtonAnteriorActionPerformed

    private void jMenu1MenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_jMenu1MenuSelected

    }//GEN-LAST:event_jMenu1MenuSelected

    private void jMenu1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseExited
        // TODO add your handling code here:
        ;
    }//GEN-LAST:event_jMenu1MouseExited

    private void jMenu1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseEntered

    }//GEN-LAST:event_jMenu1MouseEntered

    private void jSpinnerAñosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSpinnerAñosKeyTyped

    }//GEN-LAST:event_jSpinnerAñosKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFrameMain().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(JFrameMain.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnterior;
    private javax.swing.JButton jButtonInsertar;
    private javax.swing.JButton jButtonSiguiente;
    private javax.swing.JComboBox<String> jComboBoxTipos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelContadorLibros;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerAños;
    private javax.swing.JTextArea jTextAreVistaLibros;
    private javax.swing.JTextField jTextAuthor;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldNombre;
    // End of variables declaration//GEN-END:variables

    private void initConfig() throws SQLException {
        this.setSize(1100, 490);
        ENUMtype[] tipo = ENUMtype.values();

        int i = 0;
        for (ENUMtype p : tipo) {
            i = i + 1;
        }
        tipos = new String[i];
        i = 0;
        for (ENUMtype p : tipo) {
            tipos[i] = p + "";
            i = i + 1;
        }
        dmp = new DefaultComboBoxModel(tipos);
        jComboBoxTipos.setModel(dmp);

        JFormattedTextField tf = ((JSpinner.DefaultEditor) jSpinnerAños.getEditor()).getTextField();
        tf.setEditable(false);
        jSpinnerAños.setValue(1985);

        ArrayLibros=database.cargarDatosLibros2();
        
        for (int j = 0; j < ArrayLibros.size(); j++) {

            contadorLibros++;
            jLabelContadorLibros.setText(contadorLibros + "");
        }

        
    }

    public void modificarLibro() throws SQLException {
        Libro libro = new Libro();
        String codigo = jTextFieldCodigo.getText();
        int codigoInt = parseInt(codigo);
        libro.setCodigoISBN(codigoInt);
        libro.setNombre(jTextFieldNombre.getText());
        libro.setAutor(jTextAuthor.getText());
        String TipoLibro = (String) jComboBoxTipos.getSelectedItem();
        libro.setGenero(ENUMtype.valueOf(TipoLibro));
        String spinner = "catch Value";
        Integer myint = (Integer) jSpinnerAños.getValue();
        spinner = myint.toString();
        libro.setAñoPublicacion(spinner);

        database.modificarLibro(libro);
    }

    public void eliminarLibro() throws SQLException {
        Libro libro = new Libro();
        String codigo = jTextFieldCodigo.getText();
        int codigoInt = parseInt(codigo);
        libro.setCodigoISBN(codigoInt);
        libro.setNombre(jTextFieldNombre.getText());
        libro.setAutor(jTextAuthor.getText());
        String TipoLibro = (String) jComboBoxTipos.getSelectedItem();
        libro.setGenero(ENUMtype.valueOf(TipoLibro));
        String spinner = "catch Value";
        Integer myint = (Integer) jSpinnerAños.getValue();
        spinner = myint.toString();
        libro.setAñoPublicacion(spinner);
        

        
        database.borrarLibro(libro);
    }

}
